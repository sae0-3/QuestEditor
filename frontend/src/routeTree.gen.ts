/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as QuestionsDynamicIndexImport } from './routes/questions/dynamic/index'
import { Route as QuestionsDynamicViewImport } from './routes/questions/dynamic/view'
import { Route as QuestionsDynamicCreateImport } from './routes/questions/dynamic/create'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const QuestionsDynamicIndexRoute = QuestionsDynamicIndexImport.update({
  id: '/questions/dynamic/',
  path: '/questions/dynamic/',
  getParentRoute: () => rootRoute,
} as any)

const QuestionsDynamicViewRoute = QuestionsDynamicViewImport.update({
  id: '/questions/dynamic/view',
  path: '/questions/dynamic/view',
  getParentRoute: () => rootRoute,
} as any)

const QuestionsDynamicCreateRoute = QuestionsDynamicCreateImport.update({
  id: '/questions/dynamic/create',
  path: '/questions/dynamic/create',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/questions/dynamic/create': {
      id: '/questions/dynamic/create'
      path: '/questions/dynamic/create'
      fullPath: '/questions/dynamic/create'
      preLoaderRoute: typeof QuestionsDynamicCreateImport
      parentRoute: typeof rootRoute
    }
    '/questions/dynamic/view': {
      id: '/questions/dynamic/view'
      path: '/questions/dynamic/view'
      fullPath: '/questions/dynamic/view'
      preLoaderRoute: typeof QuestionsDynamicViewImport
      parentRoute: typeof rootRoute
    }
    '/questions/dynamic/': {
      id: '/questions/dynamic/'
      path: '/questions/dynamic'
      fullPath: '/questions/dynamic'
      preLoaderRoute: typeof QuestionsDynamicIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/questions/dynamic/create': typeof QuestionsDynamicCreateRoute
  '/questions/dynamic/view': typeof QuestionsDynamicViewRoute
  '/questions/dynamic': typeof QuestionsDynamicIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/questions/dynamic/create': typeof QuestionsDynamicCreateRoute
  '/questions/dynamic/view': typeof QuestionsDynamicViewRoute
  '/questions/dynamic': typeof QuestionsDynamicIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/questions/dynamic/create': typeof QuestionsDynamicCreateRoute
  '/questions/dynamic/view': typeof QuestionsDynamicViewRoute
  '/questions/dynamic/': typeof QuestionsDynamicIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
  | '/'
  | '/questions/dynamic/create'
  | '/questions/dynamic/view'
  | '/questions/dynamic'
  fileRoutesByTo: FileRoutesByTo
  to:
  | '/'
  | '/questions/dynamic/create'
  | '/questions/dynamic/view'
  | '/questions/dynamic'
  id:
  | '__root__'
  | '/'
  | '/questions/dynamic/create'
  | '/questions/dynamic/view'
  | '/questions/dynamic/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  QuestionsDynamicCreateRoute: typeof QuestionsDynamicCreateRoute
  QuestionsDynamicViewRoute: typeof QuestionsDynamicViewRoute
  QuestionsDynamicIndexRoute: typeof QuestionsDynamicIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  QuestionsDynamicCreateRoute: QuestionsDynamicCreateRoute,
  QuestionsDynamicViewRoute: QuestionsDynamicViewRoute,
  QuestionsDynamicIndexRoute: QuestionsDynamicIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/questions/dynamic/create",
        "/questions/dynamic/view",
        "/questions/dynamic/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/questions/dynamic/create": {
      "filePath": "questions/dynamic/create.tsx"
    },
    "/questions/dynamic/view": {
      "filePath": "questions/dynamic/view.tsx"
    },
    "/questions/dynamic/": {
      "filePath": "questions/dynamic/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
